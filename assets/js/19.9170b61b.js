(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{583:function(s,n,a){"use strict";a.r(n);var t=a(4),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("Boxx"),s._v(" "),a("p",[a("img",{attrs:{src:"https://w.wallhaven.cc/full/j3/wallhaven-j39mjq.jpg",alt:""}})]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("日常记录")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("项目中会依赖一些开源JS-SDK 由于改造源码export工作量比较大 因此只能放在static在html用script标签引用 功能虽然可用 但在生产环境会出现一系列问题\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("压缩混淆js文件 js文件功能代码的安全性  "),a("a",{attrs:{href:"https://github.com/mishoo/UglifyJS2/tree/harmony",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，")]),s._v(" "),a("li",[s._v("年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const UglifyJS = require('uglify-es') //引用uglify-es插件进行压缩混淆代码\n\nnew CopyWebpackPlugin([{\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      },\n      {//指定文件夹下所有js文件到指定文件夹\n        from: path.resolve(__dirname, '../static/one/js'),\n        to: './static/one/js',\n        transform: function (content) {\n          return UglifyJS.minify(content.toString()).code;\n        }\n      }，\n      {//指定单个文件到指定文件夹\n        from: path.resolve(__dirname, '../static/two/js/test.js'),\n        to: './static/two/js/',\n        transform: function (content) {\n          return UglifyJS.minify(content.toString()).code;\n        }\n      }\n  ])\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("ul",[a("li",[s._v("由于浏览器缓存机制将文件名加后缀哈希处理")])]),s._v(" "),a("h4",{attrs:{id:"网络上查阅了很多资料-webpack支持将src下所有js-css-image-进行合并压缩混淆哈希处理-但对静态资源的处理很少"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络上查阅了很多资料-webpack支持将src下所有js-css-image-进行合并压缩混淆哈希处理-但对静态资源的处理很少"}},[s._v("#")]),s._v(" 网络上查阅了很多资料 webpack支持将src下所有js css image 进行合并压缩混淆哈希处理 但对静态资源的处理很少")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/beiweideqidaozhe/article/details/62048290",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接"),a("OutboundLink")],1)]),s._v(" "),a("ol",[a("li",[s._v("一开始使用的方式是直接在编译后的js文件后面加入")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("?v=Math.random()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这样每次都会把编译后的文件重新加载一遍，虽然是可以解决缓存的问题，但是会造成网络请求的浪费。(由于是对静态资源js文件进行处理，所以这种方式可以采纳)\n2. 第二种方式就是使用assets-webpack-plugin 的插件。该插件会在每次编译完成后，生成一份webpack.assets.js文件，文件的内容是最新的编译后的文件名称")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const AssetsPlugin=require('assets-webpack-plugin');\n\nplugins:[\n    new AssetsPlugin({\n        filename:'build/webpack.assets.js',\n        processOutput:function(assets){\n            return 'window.WEBPACK_ASSETS='+JSON.stringify(assets);\n        }\n    })\n]\n\n\n//这样引入完成后，每次build完成后，都会在webpack.assets.js中生成以下代码\nwindow.WEBPACK_ASSETS={\"main\":{\"js\":\"1541559546eeb5ec7570.index.js\"}}\n//名字带hash值是在webpack的output中配置的\noutput:{\n    filename:'[hash].index.js'\n}\n//在最终引用文件时\n<script>\n    document.write('<script type=\"text/javascript\" src=\"/resources/web/build/webpack.assets.js?v='+Math.random()+'\"><\\/script>');\n<\/script>\n<script>\n    document.write('<script src=\"/resources/web/build/' + window.WEBPACK_ASSETS['main'].js + '\"><\\/script>');\n<\/script>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("ul",[a("li",[s._v("经项目测试发现AssetsPlugin执行后 会将所有js文件都放入一个有序数组里 通过index去拿到js路径进行hash处理 而目前问题是解决静态资源js 当项目src打包出的js文件发生变化 index会随之变化 所以这个方案不太适合")]),s._v(" "),a("li",[s._v("综上所述方案一是比较符合需求的 但方法比较low 在经过一番查阅后 发现有个方案比较契合\n"),a("a",{attrs:{href:"https://www.cnblogs.com/haogj/p/5649670.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function HashStaticPlugin(options) {\n  this.options = options;\n}\n\nHashStaticPlugin.prototype.apply = function (compiler) {\n  var paths = this.options.paths;\n  compiler.plugin(\'compilation\', function (compilation, options) {\n    compilation.plugin(\'html-webpack-plugin-before-html-processing\', function (htmlPluginData, callback) {\n      for (var i = paths.length - 1; i >= 0; i--) {\n        // 如果后缀有“[hash]”则添加随机参数\n        if (paths[i].indexOf("[hash]") != -1) {\n          let str = paths[i].replace("[hash]", new Date().getTime())\n          htmlPluginData.assets.js.unshift(str);\n        } else {\n          htmlPluginData.assets.js.unshift(paths[i]);\n        }\n\n      }\n      callback(null, htmlPluginData);\n    });\n  });\n};\n\n\nHashStaticPlugin({\n      paths: [\n        "./static/one/js/test1.js?t=[hash]",\n        "./static/two/js/test2.js?t=[hash]",\n      ]\n    }),\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])])],1)}),[],!1,null,null,null);n.default=e.exports}}]);