(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{580:function(t,a,e){"use strict";e.r(a);var r=e(4),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("Boxx"),t._v(" "),e("p",[e("img",{attrs:{src:"https://w.wallhaven.cc/full/e7/wallhaven-e7zjlo.jpg",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"创建本地分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建本地分支"}},[t._v("#")]),t._v(" 创建本地分支")]),t._v(" "),e("ul",[e("li",[t._v("查看分支：git branch")]),t._v(" "),e("li",[t._v("创建分支：git branch name")]),t._v(" "),e("li",[t._v("切换分支：git checkout name")]),t._v(" "),e("li",[t._v("创建+切换分支：git checkout -b name")])]),t._v(" "),e("h3",{attrs:{id:"如果用-git-checkout-master切换到主分支-在当name分支下进行的文件变更的内容无法看到"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如果用-git-checkout-master切换到主分支-在当name分支下进行的文件变更的内容无法看到"}},[t._v("#")]),t._v(" 如果用 git checkout master切换到主分支，在当name分支下进行的文件变更的内容无法看到")]),t._v(" "),e("ul",[e("li",[t._v("提交分支到github:git push origin name")])]),t._v(" "),e("h2",{attrs:{id:"将分支的更新内容合并到master分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将分支的更新内容合并到master分支"}},[t._v("#")]),t._v(" 将分支的更新内容合并到master分支")]),t._v(" "),e("ul",[e("li",[t._v("切换master分支：git checkout master")])]),t._v(" "),e("h3",{attrs:{id:"合并name分支-git-merge-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并name分支-git-merge-name"}},[t._v("#")]),t._v(" 合并name分支：git merge name")]),t._v(" "),e("h4",{attrs:{id:"这时合并到master上内容还没提交到github上-需要push操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这时合并到master上内容还没提交到github上-需要push操作"}},[t._v("#")]),t._v(" 这时合并到master上内容还没提交到github上，需要push操作")]),t._v(" "),e("h2",{attrs:{id:"删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),e("h3",{attrs:{id:"删除本地分支-git-branch-d-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除本地分支-git-branch-d-name"}},[t._v("#")]),t._v(" 删除本地分支：git branch -d name")]),t._v(" "),e("h3",{attrs:{id:"删除服务器分支-git-push-origin-name-分支名前的冒号代表删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除服务器分支-git-push-origin-name-分支名前的冒号代表删除"}},[t._v("#")]),t._v(" 删除服务器分支：git push origin ：name（分支名前的冒号代表删除）")]),t._v(" "),e("h2",{attrs:{id:"clone分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone分支"}},[t._v("#")]),t._v(" clone分支")]),t._v(" "),e("h3",{attrs:{id:"默认会把github仓库所有内容clone到本地"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#默认会把github仓库所有内容clone到本地"}},[t._v("#")]),t._v(" 默认会把github仓库所有内容clone到本地")]),t._v(" "),e("h3",{attrs:{id:"但只会在本地默认创建一个master分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#但只会在本地默认创建一个master分支"}},[t._v("#")]),t._v(" 但只会在本地默认创建一个master分支")]),t._v(" "),e("h3",{attrs:{id:"查看所有分支名字-git-branch-r"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看所有分支名字-git-branch-r"}},[t._v("#")]),t._v(" 查看所有分支名字：git branch -r")]),t._v(" "),e("h3",{attrs:{id:"把远程分支取到本地-git-checkout-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#把远程分支取到本地-git-checkout-name"}},[t._v("#")]),t._v(" 把远程分支取到本地：git checkout name")]),t._v(" "),e("h2",{attrs:{id:"分支要设置跟踪分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支要设置跟踪分支"}},[t._v("#")]),t._v(" 分支要设置跟踪分支")]),t._v(" "),e("ol",[e("li",[t._v("需要远程仓库地址；")]),t._v(" "),e("li",[t._v("需要提交本地分支")]),t._v(" "),e("li",[t._v("提交本地分支的时候，需要添加参数设置跟踪分支，刚才没设置")]),t._v(" "),e("li",[t._v("如果没设置，则需要手动设置跟踪分支")])]),t._v(" "),e("h3",{attrs:{id:"git-checkout-b-newbranch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-b-newbranch"}},[t._v("#")]),t._v(" git checkout -b newBranch")]),t._v(" "),e("h3",{attrs:{id:"git-push-set-upstream-origin-newbranch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push-set-upstream-origin-newbranch"}},[t._v("#")]),t._v(" git push --set-upstream origin newBranch")]),t._v(" "),e("h3",{attrs:{id:"你那个远程分支-feature-serverdetail-创建的时候-提交了244个多个文件。相当于是所有文件全是新创建-其实没必要。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#你那个远程分支-feature-serverdetail-创建的时候-提交了244个多个文件。相当于是所有文件全是新创建-其实没必要。"}},[t._v("#")]),t._v(" 你那个远程分支， feature-serverdetail，创建的时候，提交了244个多个文件。相当于是所有文件全是新创建，其实没必要。")]),t._v(" "),e("h3",{attrs:{id:"先git-checkout-dev-然后git-pull-origin-dev-然后git-checkout-b-fea-serverdetail-新建本地分支-然后在fea-serverdetail分之下修改文件后-git-push-origin-fea-serverdetail"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#先git-checkout-dev-然后git-pull-origin-dev-然后git-checkout-b-fea-serverdetail-新建本地分支-然后在fea-serverdetail分之下修改文件后-git-push-origin-fea-serverdetail"}},[t._v("#")]),t._v(" 先git checkout dev，然后git pull origin dev，然后git checkout -b fea-serverdetail  (新建本地分支)，然后在fea-serverdetail分之下修改文件后，git push origin fea-serverdetail")]),t._v(" "),e("h3",{attrs:{id:"这样-初始化的代码-是从dev分支上取的-然后加入你要修改的文件和代码就行。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#这样-初始化的代码-是从dev分支上取的-然后加入你要修改的文件和代码就行。"}},[t._v("#")]),t._v(" 这样，初始化的代码，是从dev分支上取的，然后加入你要修改的文件和代码就行。")]),t._v(" "),e("h3",{attrs:{id:"强行pull远程代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强行pull远程代码"}},[t._v("#")]),t._v(" 强行pull远程代码")]),t._v(" "),e("h4",{attrs:{id:"git-fetch-all-只是下载代码到本地-不进行合并操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-fetch-all-只是下载代码到本地-不进行合并操作"}},[t._v("#")]),t._v(" git fetch --all //只是下载代码到本地，不进行合并操作")]),t._v(" "),e("h4",{attrs:{id:"git-reset-hard-origin-master-把head指向最新下载的版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-hard-origin-master-把head指向最新下载的版本"}},[t._v("#")]),t._v(" git reset --hard origin/master  //把HEAD指向最新下载的版本")]),t._v(" "),e("h3",{attrs:{id:"cmd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmd"}},[t._v("#")]),t._v(" cmd")]),t._v(" "),e("h4",{attrs:{id:"查看文件-dir"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看文件-dir"}},[t._v("#")]),t._v(" 查看文件 dir")]),t._v(" "),e("h4",{attrs:{id:"保存树级文件tree-f-tree-txt"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#保存树级文件tree-f-tree-txt"}},[t._v("#")]),t._v(" 保存树级文件tree /f > tree.txt")]),t._v(" "),e("ul",[e("li",[t._v("git branch 查看本地分支")]),t._v(" "),e("li",[t._v("git branch -r 查看远程分支")]),t._v(" "),e("li",[t._v("git branch -a 查看所有分支")]),t._v(" "),e("li",[t._v("git  remote show origin 查看remote地址，远程分支，还有本地分支与之相对应关系等信息")]),t._v(" "),e("li",[t._v("git remote prune origin /git fecht -p 删除远程仓库不存在的分支")])])],1)}),[],!1,null,null,null);a.default=s.exports}}]);